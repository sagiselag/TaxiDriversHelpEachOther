import { GeoFirestoreTypes } from './GeoFirestoreTypes';
import { GeoDocumentReference } from './GeoDocumentReference';
import { GeoDocumentSnapshot } from './GeoDocumentSnapshot';
export declare class GeoTransaction {
    private _transaction;
    constructor(_transaction: GeoFirestoreTypes.cloud.Transaction | GeoFirestoreTypes.web.Transaction);
    readonly native: GeoFirestoreTypes.cloud.Transaction | GeoFirestoreTypes.web.Transaction;
    delete(documentRef: GeoDocumentReference | GeoFirestoreTypes.cloud.DocumentReference | GeoFirestoreTypes.web.DocumentReference): GeoTransaction;
    get(documentRef: GeoDocumentReference | GeoFirestoreTypes.cloud.DocumentReference | GeoFirestoreTypes.web.DocumentReference): Promise<GeoDocumentSnapshot>;
    set(documentRef: GeoDocumentReference | GeoFirestoreTypes.cloud.DocumentReference | GeoFirestoreTypes.web.DocumentReference, documentData: GeoFirestoreTypes.DocumentData, options?: GeoFirestoreTypes.SetOptions): GeoTransaction;
    update(documentRef: GeoDocumentReference | GeoFirestoreTypes.cloud.DocumentReference | GeoFirestoreTypes.web.DocumentReference, data: GeoFirestoreTypes.UpdateData, customKey?: string): GeoTransaction;
}
