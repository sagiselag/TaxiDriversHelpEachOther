import { GeoFirestoreTypes } from './GeoFirestoreTypes';
import { GeoDocumentReference } from './GeoDocumentReference';
export declare class GeoDocumentSnapshot {
    private _snapshot;
    private _isWeb;
    constructor(_snapshot: GeoFirestoreTypes.cloud.DocumentSnapshot | GeoFirestoreTypes.web.DocumentSnapshot);
    readonly native: GeoFirestoreTypes.cloud.DocumentSnapshot | GeoFirestoreTypes.web.DocumentSnapshot;
    readonly exists: boolean;
    readonly id: string;
    readonly ref: GeoDocumentReference;
    data(options?: GeoFirestoreTypes.SnapshotOptions): GeoFirestoreTypes.GeoDocumentData | undefined;
    get(fieldPath: string | GeoFirestoreTypes.cloud.FieldPath | GeoFirestoreTypes.web.FieldPath, options?: GeoFirestoreTypes.SnapshotOptions): any;
    isEqual(other: GeoDocumentSnapshot | GeoFirestoreTypes.cloud.DocumentSnapshot | GeoFirestoreTypes.web.DocumentSnapshot): boolean;
}
